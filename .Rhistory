all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare))+
geom_boxplot()+
geom_hline(yintercept = c(sum(all[all$Embarked=='Q',]$Fare, na.rm=T)/nrow(all[all$Embarked =='Q', ]), sum(all$Fare, na.rm=T)/nrow(all))
, lty =2, col ='red', show.legend = T)
# 아래 결과를 보면
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
group_by(Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n())
# 시각화로 확인
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare))+
geom_boxplot()+
geom_hline(yintercept = c(sum(all[all$Embarked=='Q',]$Fare, na.rm=T)/nrow(all[all$Embarked =='Q', ]), sum(all$Fare, na.rm=T)/nrow(all))
, lty =2, col ='red', show.legend = T)
# 시각화로 확인
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare), fill = Embarked)+
geom_boxplot()+
geom_hline(yintercept = c(sum(all[all$Embarked=='Q',]$Fare, na.rm=T)/nrow(all[all$Embarked =='Q', ]), sum(all$Fare, na.rm=T)/nrow(all))
, lty =2, col ='red', show.legend = T)
# 시각화로 확인
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare), )+
geom_boxplot(fill = Embarked)+
geom_hline(yintercept = c(sum(all[all$Embarked=='Q',]$Fare, na.rm=T)/nrow(all[all$Embarked =='Q', ]), sum(all$Fare, na.rm=T)/nrow(all))
, lty =2, col ='red', show.legend = T)
# 시각화로 확인
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare,fill = Embarked))+
geom_boxplot()+
geom_hline(yintercept = c(sum(all[all$Embarked=='Q',]$Fare, na.rm=T)/nrow(all[all$Embarked =='Q', ]), sum(all$Fare, na.rm=T)/nrow(all))
, lty =2, col ='red', show.legend = T)
# 시각화로 확인
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare,fill = Embarked))+
geom_boxplot(alpha = 0.3)+
geom_hline(yintercept = c(sum(all[all$Embarked=='Q',]$Fare, na.rm=T)/nrow(all[all$Embarked =='Q', ]), sum(all$Fare, na.rm=T)/nrow(all))
, lty =2, col ='red', show.legend = T)
# 시각화로 확인
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare,fill = Embarked))+
geom_boxplot(alpha = 0.7)+
geom_hline(yintercept = c(sum(all[all$Embarked=='Q',]$Fare, na.rm=T)/nrow(all[all$Embarked =='Q', ]), sum(all$Fare, na.rm=T)/nrow(all))
, lty =2, col ='red', show.legend = T)
# 시각화로 확인
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare,fill = Embarked))+
geom_boxplot(alpha = 0.7)+
geom_hline(yintercept = 80)
# Check Cabin Data Missing Processing
# ** Cabin 변수를 보면 분명 공란이 많은데 NA로 인식하지 않는다.
table(is.na(all$Cabin))
# C로 치환하는게 로지컬 하다는 생각이 든다.
all[is.na(all$Embarked),Embarked]
# C로 치환하는게 로지컬 하다는 생각이 든다.
all[is.na(all$Embarked),'Embarked']
# C로 치환하는게 로지컬 하다는 생각이 든다.
all[is.na(all$Embarked),'Embarked'] <- 'C'
all[is.na(all$Embarked),]
all[c(62,830),]
# Check Cabin Data Missing Processing
# ** Cabin 변수를 보면 분명 공란이 많은데 NA로 인식하지 않는다.
table(is.na(all$Cabin))
aggr(all, prop = F, numbers = T) # 확률 대신 정수로 표현하겠다는 뜻
aggr(all, prop = F, numbers = T,cex.axix - 0.7) # 확률 대신 정수로 표현하겠다는 뜻
aggr(all, prop = F, numbers = T,cex.axis = 0.7) # 확률 대신 정수로 표현하겠다는 뜻
aggr(all, prop = F, numbers = T,cex.axis = 0.5) # 확률 대신 정수로 표현하겠다는 뜻
aggr(all, prop = F, numbers = T,cex.axis = 0.4) # 확률 대신 정수로 표현하겠다는 뜻
aggr(all, prop = F, numbers = T,
col = c('ivory', 'orange'),
ylab = c('Mssing Num','Missng Relation'),
cex.axis = .5)  # 위 두 가지 그래프를 합쳐서 볼 수 있음
aggr(all, prop = F, numbers = T,
col = c('ivory', 'orange'),
ylab = c('Mssing Num','Missng Relation'),
cex.axis = .5)  # 위 두 가지 그래프를 합쳐서 볼 수 있음
aggr(all, prop = F, numbers = T,
col = c('ivory', 'orange'),
ylab = c('Mssing Num','Missng Relation'),
combine = T,
cex.axis = .5)  # 위 두 가지 그래프를 합쳐서 볼 수 있음
all %>% map_dbl(~sum(is.na(.)))
library(VIM) # Visualzation and imputation of Missing Values
all %>% map_dbl(~sum(is.na(.)))
# a. Fare Value Indexing
all[is.na(all$Fare),] # 1044
hist(all$Fare,breaks = 50)
# a. Fare Value Indexing
all[is.na(all$Fare),] # 1044
# Age와 Fare과 상관관계가 있을까?
ggplot(data=all,aes(Age,Fare))+
geom_point()
glm(all$Fare ~ all$Age)
# Age와 Fare과 상관관계가 있을까?
ggplot(data=all,aes(Age,Fare))+
geom_point()+
geom_smooth(method='lm', formula = Fare ~ Age)
lm(all$Fare ~ all$Age)
glm(all$Fare ~ all$Age)
# Age와 Fare과 상관관계가 있을까?
ggplot(data=all,aes(Age,Fare))+
geom_point()+
geom_smooth(method='lm', formula = Fare ~ Age)+
ylim(0,300)
library(dplyr)
library(ggplot2)
library(VIM) # Visualzation and imputation of Missing Values
library(corrplot) # corrplot
library(RColorBrewer)
library(forcats)# 범주형 변수를 다루는데 도움을 주는 패키지
# Age와 Fare과 상관관계가 있을까?
ggplot(data=all,aes(Age,Fare))+
geom_point()+
geom_smooth(method='lm', formula = Fare ~ Age)+
ylim(0,300)
glm(all$Fare ~ all$Age)
# a. Fare Value Indexing
all[is.na(all$Fare),] # 1044
# 성별에 따른 Fare의 차이
ggplot(data = all, mapping=aes(Sex, Fare))+
geom_col()
ggplot(mapping=aes(Sex, mean(Fare)))+
geom_col()
# 성별에 따른 Fare의 차이
all %>%
ggplot(mapping=aes(Sex, mean(Fare)))+
geom_col()
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(mapping=aes(Sex, Fare))+
geom_col()
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(mapping=aes(Sex, mean_Fare))+
geom_col()
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col()
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col()
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col()+
geom_text(aes(label = Mean Fare by Sex), position = position_dodge(width = 0.9), vjust = -0.25)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = "Mean Fare by Sex"), position = position_dodge(width = 0.9), vjust = -0.25)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = n), position = position_dodge(width = 0.9), vjust = -0.25)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = n&"num"), position = position_dodge(width = 0.9), vjust = -0.25)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = n), position = position_dodge(width = 0.9), vjust = -0.25)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = n), position = position_dodge(width = 089), vjust = -0.25)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = n), position = position_dodge(width = 0.8), vjust = -0.25)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = n), position = position_dodge(width = 0.8), vjust = -0.1)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = n), position = position_dodge(width = 0.8), vjust = -0.3)
#
glm(all$Fare ~ all$Age)
#
lm(all$Fare ~ all$Age)
#
summary(lm(all$Fare ~ all$Age))
# Age와 Fare과 상관관계가 있을까?
ggplot(data=all,aes(Age,Fare))+
geom_point()+
geom_smooth(method='lm', formula = Fare ~ Age)+
ylim(0,300)
#
summary(lm(all$Fare ~ all$Age))
# 회귀분석 결과
fit <- lm(all$Fare ~ all$Age)
summary(fit)
predict(fit, newdata = 60.5)
# prediction 진행
new_test = data.frame(
Age = c(60.5)
)
predict(fit, newdata = 60.5)
predict(fit, newdata = new_test)
new_test
# 회귀분석 결과
fit <- lm(all$Fare ~ all$Age)
summary(fit)
# prediction 진행
new_test = data.frame(
Age = c(60.5)
)
# 성별에 따른 Fare의 차이
all %>%
group_by(Sex) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n()) %>%
ggplot(mapping=aes(Sex, mean_Fare, fill = Sex))+
geom_col() +
geom_text(aes(label = n), position = position_dodge(width = 0.8), vjust = -0.3) # n의 숫자
predict(fit, newdata = new_test)
str(all)
# 회귀분석 결과
fit <- lm(data = all, Fare ~ Age)
summary(fit)
# prediction 진행
new_test = data.frame(
Age = c(60.5)
)
predict(fit, newdata = new_test)
# a. Fare Value Indexing
all[is.na(all$Fare),] # 1044
#
all %>%
groub_by(Pclass, Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()
#
all %>%
group_by(Pclass, Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()
#
all %>%
group_by(Pclass, Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare))
#
all %>%
group_by(Pclass, Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare), position dodge(width = 0.8))
#
all %>%
group_by(Pclass, Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare), position= position_dodge(width = 0.8))
#
all %>%
group_by(Pclass, Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare), position= position_dodge(width = 0.8), vjust = -.3)
all %>%
group_by(Pclass, Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T))
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare), position= position_dodge(width = 0.8), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = scale::percent(mean_Fare)), position= position_dodge(width = 0.8), vjust = -.3)
install.packages("scale")
install.packages("scales")
install.packages("scales")
library(dplyr)
library(ggplot2)
library(VIM) # Visualzation and imputation of Missing Values
library(corrplot) # corrplot
library(RColorBrewer)
library(forcats)# 범주형 변수를 다루는데 도움을 주는 패키지
library(scales)
#### 1. Data Load
train <- read.csv('data/train.csv', na.strings = c('','NA')) # 애초에 로딩할 때 부터 공백은 NA로 출력되도록 설정하기
test <- read.csv('data/test.csv', na.strings = c('','NA'))
all <- bind_rows(train,test) # 두개의 데이터를 합친다.
all_Origin <- all
#### 2. Data Check
str(all)
summary(all)
glimpse(all)
#### 3. Count Survival
train %>% count(Survived)
surv <- train %>% count(Survived) %>% filter(Survived == 1) %>% .$n
nosurv <- train %>% count(Survived) %>% filter(Survived == 0) %>% .$n
# Survival Rate
train %>%
summarise(Rate_Suv = sum(Survived,na.rm = T) / nrow(train) * 100)
# Factor Recoding
# 1) Sex
all <- all %>%
mutate(Sex = factor(Sex))
# 2) Survived
all <- all %>%
mutate(Survived = factor(Survived)) %>%
mutate(Survived = fct_recode(Survived, 'No'='0','Yes'='1'))
# Visualization
ggplot(data = all[1:891, ], mapping = aes(Sex, fill=Survived))+
geom_bar(position='fill')+
geom_hline(yintercept = sum(train$Survived)/nrow(train), lty = 2, col = 'white')
# 4. Check Cabin Data Missing Processing
aggr(all, prop = F, numbers = T,cex.axis = 0.4) # 확률 대신 정수로 표현하겠다는 뜻
aggr(all, prop = F, numbers = T,
col = c('ivory', 'orange'),
ylab = c('Mssing Num','Missng Relation'),
combine = T,
cex.axis = .5)  # 위 두 가지 그래프를 합쳐서 볼 수 있음
#Embarked,Fare,Cabin,Age,Survived에결측치가 존재함
# 1) Check Embarked
table(is.na(all$Embarked))
# Data NA 변환 확인
all[is.na(all$Embarked),]
# 아래 결과를 보면
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
group_by(Embarked) %>%
summarise(mean_Fare = mean(Fare, na.rm =T),
n = n())
# 시각화로 확인
all[-c(62,830),] %>%
filter(Pclass == 1) %>%
ggplot(mapping= aes(Embarked,Fare,fill = Embarked))+
geom_boxplot(alpha = 0.7)+
geom_hline(yintercept = 80)
# C로 치환하는게 로지컬 하다는 생각이 든다.
all[is.na(all$Embarked),'Embarked'] <- 'C'
all[c(62,830),] # 잘변환되었음
# 2) Fare에 대한  Imputation
# a. Fare Value Indexing
all[is.na(all$Fare),] # 1044
# Age와 Fare과 상관관계가 있을까?
ggplot(data=all,aes(Age,Fare))+
geom_point()+
geom_smooth(method='lm', formula = Fare ~ Age)+
ylim(0,300)
# **추세는 없어보임
# 회귀분석 결과
fit <- lm(data = all, Fare ~ Age)
summary(fit)
# **유의미한 결과가 있다..?
# prediction 진행
new_test = data.frame(
Age = c(60.5)
)
predict(fit, newdata = new_test) # 57.90377
# b. Pclass = 3 에 대한 Mean Imputation
all %>% group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm= T)) %>%
.[3,2] # 13.3
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = scale::percent(mean_Fare)), position= position_dodge(width = 0.8), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = scales::percent(mean_Fare)), position= position_dodge(width = 0.8), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare), position= position_dodge(width = 0.8), vjust = -.3)
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T))
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = round(mean_Fare),2), position= position_dodge(width = 0.8), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = round(mean_Fare),.1), position= position_dodge(width = 0.8), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = round(mean_Fare),0), position= position_dodge(width = 0.8), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = round(mean_Fare),0), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = mean(Fare, na.rm =T)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = round(mean_Fare),0), position = position_dodge(width = 0.8), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = round(mean(Fare, na.rm =T),0)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare), position = position_dodge(width = 0.8), vjust = -.3)
#
all %>%
group_by(Pclass) %>%
summarise(mean_Fare = round(mean(Fare, na.rm =T),1)) %>%
ggplot(aes(Pclass,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare), position = position_dodge(width = 0.8), vjust = -.3)
# a. Fare Value Indexing
all[is.na(all$Fare),] # 1044
# Embarked에 따른 금액
all %>%
group_by(Embarked) %>%
summarise(mean_Fare = round(mean(Fare, na.rm =T),1)) %>%
ggplot(aes(Embarked,mean_Fare))+
geom_col()+
geom_text(aes(label = mean_Fare), position = position_dodge(width = 0.8), vjust = -.3)
